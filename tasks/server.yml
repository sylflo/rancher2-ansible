- name: Create volume for rancher
  docker_volume:
    name: rancher

- name: launch rancher
  command: docker run -d --name {{ rancher_container_name }} -v rancher:/var/lib/mysql -v /host/rancher:/var/lib/rancher --restart=unless-stopped -p 8080:80 -p 8443:443 rancher/rancher:latest
  ignore_errors: true

- name: Get response from login endpoint using default password
  uri:
    url: '{{ rancher_url }}/v3-public/localProviders/local?action=login'
    method: POST
    body: {"username":"admin", "password":"admin"}
    status_code: 201
    body_format: json
    validate_certs: False
  register: login_result
  until: login_result.status == 201
  retries: 3
  delay: 10
  failed_when: login_result.status not in [201]
  ignore_errors: true

- name: Change the password
  uri:
    url: '{{ rancher_url }}/v3/users?action=changepassword'
    method: POST
    body: {"currentPassword":"admin", "newPassword":"{{ rancher_admin_password }}"}
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    body_format: json
    validate_certs: False
    status_code: 200
  when: login_result.status in [201]

- name: Get response from login endpoint using non default password
  uri:
    url: '{{ rancher_url }}/v3-public/localProviders/local?action=login'
    method: POST
    body: {"username": "admin", "password": "{{ rancher_admin_password }}"}
    status_code: 201
    body_format: json
    validate_certs: False
  register: login_result
  until: login_result.status == 201
  retries: 10
  delay: 10

- name: Create api key
  uri:
    url: '{{ rancher_url }}/v3/token'
    method: POST
    body: {"type":"token","description":"automation"}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ login_result.json.token }}"
    validate_certs: False
  register: api_key_result

- name: Set rancher server rul
  uri:
    url: '{{ rancher_url }}/v3/settings/server-url'
    method: PUT
    body: {"name":"server-url","value":"{{ rancher_url }}"}
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    status_code: 200
    body_format: json
    validate_certs: False

- name: Create cluster
  uri:
    url: '{{ rancher_url }}/v3/cluster'
    method: POST
    body: {"type":"cluster","nodes":[],"rancherKubernetesEngineConfig":{"ignoreDockerVersion":true, "network":{"type":"networkConfig","plugin":"{{ rancher_network_provider }}"}},"name":"{{ rancher_cluster_name }}"}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    validate_certs: False
  register: cluster_result

- name: Get command to launch for nodes
  uri:
    url: '{{ rancher_url }}/v3/clusterregistrationtoken'
    method: POST
    body: {"type":"clusterRegistrationToken","clusterId":"{{cluster_result.json.id}}"}
    status_code: 201
    body_format: json
    headers:
      Authorization: "Bearer {{ api_key_result.json.token }}"
    validate_certs: False
  register: node_command_result

- name: launch node command
  shell: '{{ node_command_result.json.nodeCommand[5:] }} --etcd --controlplane --worker'
